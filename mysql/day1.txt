mysql
1. 安装
   xammp(mysql) - 
   sqlyong(图形化)
   

2. 为什么要用数据库？ 
Q1：数据存储在哪里？
  内存(临时存储)、硬盘、光盘、U盘、网盘

Q2: 数据永久化
    使用文件(数据库文件) - xml , excel
	
	
3. 数据库的作用
  1. 存储大量的数据，访问和检索(对数据进行管理)
  2. 保证数据的完整性
  3. 安全与共享 
  4. 数据可以进行重新组合，产生新的数据


4. 什么数据库？
    存储数据的"仓库"
	
5. 什么样的形式来存储数据
   发展历程：
   5.1层次模型
   5.2网状模型
   5.3关系模型
      关系: 1对1 ， 1对多， 多对多
	  数据: 表
      行(实体，记录)
      列(字段，属性)
	  关系型数据库：oracle(大公司), mysql(开源，小公司) , 
	                sql server（中型公司） , Access
	                db2 ..
					
   5.4 对象模型	
   
 数据库管理系统（操作数据库的工具）
RDBM：ralation database manage  
RDBMS: ralation database manage system

6. SQL结构化查询语言(操作数据库)
  DDL： 数据定义语言
  DQL： 数据查询语言(查询)
  DML： 数据管理语言(增，修，删)
  DCL： 数据控制语言(不涉及)
  
7. DDL 数据定义语言
  1. 创建数据库
   语法： create database 数据库名称;
   命名规则:
       1. 第一个字母 a-zA-Z,下划线,@,#
       2. 后续字母a-Z,@,$,_
       3. 不能是RDBMS的关键字
       4. 不允许有空格或其它特殊字符

  2. 使用数据库
     use 数据库名称 ;
	 
  3. 删除数据库
     drop database 数据库名称;
	 
  4. 创建表

   语法：
     craete table <表名>
     (
        <列名> <列名的数据类型>[<列的约束>]
     )
     
   1. 数据类型
      数字
         整型 int  4字节
         浮点（带小数点）
            float 单精度  4字节
            double 双精度 8字节
            decimal(总位数，小数点后面的位数)  17字节
                      
      非数字
        字符串：（unicode编码，支持中文显示）
           固定字符串
               char , nchar
               
           非固定字符串
               varchar  , nvarchar 
               text, ntext(长文本--文章)
                              
               
        日期
          date
          datetime
          
      注：varchar,char 需要给长度
   2. 
  完整性 = 可靠性 + 准确性
  Q：如何保证数据的完整性
 
  数据完整性分类

	  1. 实体完整性（实体不重复） -- 保证一行数据的有效性
	  
			主键约束(primary key)、唯一约束(unique)、标识列(自增长 auto_increment
		   )
			主键与唯一的区别：
			 主键列不能为空，唯一可以为空，但是为空只能有一个
		   
		   补充：auto_crement修改
		   alter table 表名 auto_increment = 值
		   
	  2. 域完整性 -- 保证一列数据的有效性
		 非空约束 not null , 默认约束 default , check约束(mysql要看版本)
		 
	  3. 引用完整性 -- 保证引用的数据的有效性
	  
		 外键约束   
		 区别:外键（表里的列，是引用另一个表） 、 外键约束
		 
		 
		 学生表：学号，姓名，性别, 班级id 
		 
		 班级表:班级id , 班级名称
		   
		 外键约束：1. 从表引用的数据，必须是主表存在的
				  2. 主表要删除数据，必须先删除从表里的引用   
		 
	  4. 自定义完整性 存储过程、触发器    
 
   5. 删除表
     drop table 表名; 注:有主外键关系时，不能删除
	 
   6. 复制表
      create table 表名 select * from 表名2 -- 复制结构与数据
	   create table 表名 select * from 表名2 where 1 =0  -- 只复制结构
	   
   7. 修改表   
      添加列
	  alter table 表名  add 列名 列的数据类型 [列的约束]
	  
	  修改列
	  alter table 表名 change 旧列名 新列名 新的列的数据类型 [新的列的约束]
	  
	  删除列
	  alter table 表名 drop column 列名
   
	 
	 
8. DML: 数据操作语言
   增加
   insert into 表名 values (所有列的数据都要插入)
   insert into 表名(列的集合) values (对应列的值)
   
   修改
   update 表名 set 列名1 = 值 , 列名2 = 值2 [where 条件]
   
   
   删除
   delete from 表名 [where 条件]
   -- 只是数据的删除，自增量不会重置
   
   truncate table 表名
   
   区别：
     delete 会记录日志，意味着删除后数据还可以恢复,但是效率低
	 truncate 不会记录日志，删除后不能恢复，效率高
	 
	 delete 不会重置自增列，truncate会重置自增列， truncate不能用于有外键约束的表
	 
	 
   