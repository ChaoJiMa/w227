
1. nodejs是什么
  nodejs 09年发布了第一个版本(12,13)，它是一门新的后端语言，语法采用的是Javascript的语法，
  所以说，它又称为服务器端的js解释器
  
  nodejs 使用google 浏览器里的v8 引擎，对js进行解释
  
  注：nodejs 中的javascript ，不支持DOM和bom 
  
2. nodejs 特点
  2.1 模块化
  2.2 IO异步操作
  2.3 事件驱动
  
3.安装
地址：http://nodejs.cn/download/
指令: npm -v
      node -v  

4. 目录结构
  public -- 静态资源文件
  router -- 模块文件
  view   -- 视图文件
  app.js -- 入口文件
  package.json -- 项目依赖文件(配置)  npm init 对文件进行初始化
  
 5. web 工作原理
 
  bs
  客户端(浏览器)
  http协议
  网页(html,css,js)
  服务器(启动服务)    
      Php   apache
	  java  tomcat
	  asp.net  iis
	  nodejs    nodejs 
	  
 
6. 
  nodejs 创建服务
   const http  = require('http')
   const serve = http.createServer(function(requrest,response){
   
   })
   serve.listen(8888) //监听
   

  http 状态码
  200 :成功
  30x : 缓存
  40x ：找不到资源 
  50x ：服务器代码有错

7. express 封装了http， 简化了web服务的工作

  模块使用的万能公式
  1. 了解模块
  2. 下载模块
      npm install express  -- 下载最新的express 版本
	  npm install express@版本号  -- 下载指定的版本
	  下载比较慢 （安装 nrm）
	    npm install nrm -g //全局安装 
		nrm ls //显示资源库, 星号在谁前面，就说明使用的是谁
		urm use taobao //使用taobao库
		
	  
  3. 使用模块
     3.1 引用模块 3.2 配置  3.3 使用
  
 =============================
 下午
 回顾:bs 的工作原理 
 8. express 的配置
    
	// 加载依赖库，原来这个类库都封装在connect中，现在需地注单独加载
	var express = require('express');
	var path = require('path');
	var favicon = require('serve-favicon');
	var logger = require('morgan');
	var cookieParser = require('cookie-parser');
	var bodyParser = require('body-parser');

	// 创建项目实例
	var app = express();

	// 定义icon图标
	app.use(favicon(__dirname + '/public/favicon.ico'));
	// 定义日志和输出级别
	app.use(logger('dev'));
	// 定义静态文件目录
	app.use(express.static(path.join(__dirname, 'public')));

 9. 动态路由(分发)
    app.get(请求地址,回调函数)
	app.post
	app.put
	接收用户的请求
	http的请求方式: get,post ,delete,put ,options...
	
    app.all(请求地址,回调函数)
	
	
	扩展：
	get 与post 传参的区别
	get 参数跟在url后面，不安全，而且有大小
	post 参数跟网页头部，安全性较高，没有大小限制
	
	
	怎么获取提交的数据
	get 和post 在服务器端，接受参数的区别
	get ： request.query.参数名称(input name的名称)
	post：
	    下载body-parser模块
		// 定义数据解析器
		app.use(bodyParser.json());
		app.use(bodyParser.urlencoded({ extended: false }));
		
		request.body.参数名称
	 
    	 
	注： response.send()不能重复执行
 
   
   
   
   
   
   
   
   
 
 
 
 
 
 